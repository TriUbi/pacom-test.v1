@page "/login"
@inject HttpClient Http
@inject NavigationManager Nav
@inject IJSRuntime JS
@using DeviceFrontend.Helpers
@rendermode InteractiveServer

<h3><i class="bi bi-lock-fill me-2"></i>Logga in</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

<div class="mb-3">
    <input class="form-control" placeholder="Användarnamn" @bind="username" />
</div>
<div class="mb-3">
    <input class="form-control" type="password" placeholder="Lösenord" @bind="password" />
</div>
<button class="btn btn-primary" @onclick="PerformLogin">Logga in</button>

@code {
    private string username = "";
    private string password = "";
    private string? errorMessage;

    /// <summary>
    /// Utför inloggningen genom att skicka användarens inloggningsdata till backend
    /// Om inloggningen lyckas, sparas JWT-token i JwtStore och i localStorage, och användaren navigeras till startsidan
    /// </summary>
    private async Task PerformLogin()
    {
       var client = Http; 

        var loginData = new { username, password };
        var response = await client.PostAsJsonAsync("http://localhost:5277/api/auth/login", loginData);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<TokenResult>();
            if (result is not null && !string.IsNullOrEmpty(result.Token))
            {
                JwtStore.Token = result.Token;
                await JS.InvokeVoidAsync("localStorage.setItem", "jwt", result.Token);
                Nav.NavigateTo("/", forceLoad: true);
            }
            else
            {
                errorMessage = "Tomt svar från servern.";
            }
        }
        else
        {
            errorMessage = "Felaktigt användarnamn eller lösenord.";
        }
    }

    /// <summary>
    /// Klass för att representera svaret från inloggning (JWT-token)
    /// </summary>
    private class TokenResult
    {
        /// <summary>
        /// JWT-token som returneras från backend.
        /// </summary>
        public string Token { get; set; } = string.Empty;
    }
}
